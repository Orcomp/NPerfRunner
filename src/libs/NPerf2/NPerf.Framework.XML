<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NPerf.Framework</name>
    </assembly>
    <members>
        <member name="T:NPerf.Framework.Interfaces.IPerfTestSuite">
            <summary>
            The the performance fixture that should be run against instances of a given interface implementations.
            </summary>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestSuiteInfo.DefaultTestCount">
            <summary>
            Gets the number of each test runs.
            </summary>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestSuiteInfo.TestSuiteDescription">
            <summary>
            Gets the description string.
            </summary>
            <value>Test description.</value>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestSuiteInfo.FeatureDescription">
            <summary>
            Gets the tested feature description string.
            </summary>
            <value>Tested feature description</value>
        </member>
        <member name="M:NPerf.Framework.Interfaces.IPerfTestSuite.SetUp(System.Int32,System.Object)">
            <summary>
            The test set up method.
            </summary>
            <param name="iteration">
            Test iteration.
            </param>
            <param name="testedObject">
            The tested object.
            </param>
        </member>
        <member name="M:NPerf.Framework.Interfaces.IPerfTestSuite.TearDown(System.Object)">
            <summary>
            The tear down.
            </summary>
            <param name="testedObject">
            The tested object.
            </param>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestSuite.Tests">
            <summary>
            Gets performance tests.
            </summary>
            <value></value>
        </member>
        <member name="T:NPerf.Framework.PerfTesterAttribute">
            <summary>
            A performance tester class attribute.
            </summary>
            <remarks name="PerfTesterAttribute"> 
<para>
This is the attribute that marks a class that contains performance test
methods. This attribute is contained in the NPerf.Framework namespace. 
</para>
<para>
The user must specify the type to which the performance tests are to
be applied. This type is supplied in the constructor.
</para>
</remarks>
            <example name="PerfTesterAttribute">
In this example, we mark a class to benchmark sorter algorithms defined by the <c>ISorter</c> interface,
and that should run 3 times:
<code>using NPerf.Framework;

[PerfTester(typeof(IDictionary),10)]
public class SorterTester
{
   ...
}</code>
A test description, and a featured value description can be specified in the attribute
constructor:
<code>[PerfTester(typeof(IDictionary),10, Description="...", FeatureDescription="...")]
public class SorterTester ...
</code>
</example>
        </member>
        <member name="M:NPerf.Framework.PerfTesterAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NPerf.Framework.PerfTesterAttribute"/> class. 
            Constructs the attribute
            </summary>
            <param name="testedType">
            target type
            </param>
            <param name="testCount">
            number of test runs
            </param>
            <param name="description">
            Test description.
            </param>
            <param name="featureDescription">
            Tested feature description.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="testedType"/> is a null reference
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="testCount"/> is smaller than 1
            </exception>
        </member>
        <member name="P:NPerf.Framework.PerfTesterAttribute.TestedType">
            <summary>
            Gets the target type of the tester
            </summary>
            <value>
            Target type of the tester
            </value>
        </member>
        <member name="P:NPerf.Framework.PerfTesterAttribute.TestCount">
            <summary>
            Gets the number of test runs
            </summary>
            <value>
            The number of test runs 
            </value>
        </member>
        <member name="P:NPerf.Framework.PerfTesterAttribute.Description">
            <summary>
            Gets the the Test description string.
            </summary>
            <value>Test description</value>
        </member>
        <member name="P:NPerf.Framework.PerfTesterAttribute.FeatureDescription">
            <summary>
            Gets the tested feature description string
            </summary>
            <value>Tested feature description</value>
        </member>
        <member name="T:NPerf.Framework.PerfRunDescriptorAttribute">
            <summary>
            Defines a method that returns a description of the current run.
            </summary>
            <remarks name="PerfRunDescriptorAttribute">
<para>
The <see cref="T:NPerf.Framework.PerfRunDescriptorAttribute"/> tags a method that returns
the feature tested value in function of the run index.
</para>
<para>
For instance, if you are testing collections with increasing number of elements,
the feature tested value is the number of elements processed.
</para>
</remarks>
        </member>
        <member name="T:NPerf.Framework.PerfIgnoreAttribute">
            <summary>
            A custom attribute to disable tester or tests
            </summary>
        </member>
        <member name="M:NPerf.Framework.PerfIgnoreAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPerf.Framework.PerfIgnoreAttribute"/> class. 
            Default constructor - initializes all fields to default values
            </summary>
            <param name="message">
            </param>
            <exception cref="T:System.ArgumentNullException">
            </exception>
        </member>
        <member name="P:NPerf.Framework.PerfIgnoreAttribute.Message">
            <summary>Gets the reason why the test is ignored</summary>
            <value>Explanation of the test ignore</value>
        </member>
        <member name="T:NPerf.Framework.PerfTestAttribute">
            <summary>
            Defines a benchmark test method.
            </summary>
            <!-- Не обнаружено элементов, соответствующих тегу include --><include file="NPerf.Framework.Doc.xml" path="doc/remarkss/remarks[@name=&quot;PerfTestAttribute&quot;]"/>
            <example name="PerfTestAttribute">
In this example, we define a test method. 
<code>using NPerf.Framework;

[PerfTester(typeof(IDictionary), 10)]
public DictionaryTester
{
    [PerfTest]
    public void Test(IDictionary dictionary)
    {
       ...
    }
}</code>
</example>
        </member>
        <member name="M:NPerf.Framework.PerfTestAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPerf.Framework.PerfTestAttribute"/> class. 
            Constructor with test descrition
            </summary>
            <param name="description">
            The description.
            </param>
            <remarks>
            Constructs the attribute with <paramref name="description"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            description is a null reference
            </exception>
        </member>
        <member name="P:NPerf.Framework.PerfTestAttribute.Description">
            <summary>Gets the Test description string</summary>
            <value>Test description</value>
        </member>
        <member name="T:NPerf.Framework.PerfTearDownAttribute">
            <summary>
            Defines a test tear-down method.
            </summary>
            <remarks name="PerfTearDownAttribute">
<para>
The PerfTearDown attribute marks a specific method inside a class, that has 
already been marked with the <see cref="T:NPerf.Framework.PerfTesterAttribute"/>, 
as a test teardown method. 
</para>
<para>
The method must take the tested type as parameter.
</para>
</remarks>
            <example name="PerfSetUpTearDownAttribute">
The <see cref="T:NPerf.Framework.PerfSetUpAttribute"/> defines a method that initializes the tester and
tested object. The <see cref="T:NPerf.Framework.PerfTearDownAttribute"/> defines a method that cleans ressources after the test has 
been executed.
<code>using NPerf.Framework;

[PerfTester(typeof(IDictionary),3)]
public DictionaryTester
{
    [PerfSetUp]
    public void SetUp(int testIndex, IDictionary dic)
    {
       // setting up the test
       ...
    }
    
    [PerfTearDown]
    public void TearDown(IDictionary dic)
    {
    }
}</code>
</example>
        </member>
        <member name="T:NPerf.Framework.Interfaces.IPerfTest">
            <summary>
            The performance test interface.
            </summary>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestInfo.TestMethodName">
            <summary>
            Gets the name of test.
            </summary>
        </member>
        <member name="P:NPerf.Framework.Interfaces.IPerfTestInfo.TestDescription">
            <summary>
            Gets the description of test.
            </summary>
        </member>
        <member name="M:NPerf.Framework.Interfaces.IPerfTest.Test(System.Object)">
            <summary>
            The test method.
            </summary>
            <param name="testedObject">
            Instance of tested object.
            </param>
        </member>
        <member name="T:NPerf.Framework.PerfSetUpAttribute">
            <summary>
            Defines a test set-up method.
            </summary>
            <remarks name="PerfSetUpAttribute">
<para>
The SetUp attribute marks a specific method inside a class that has 
already been marked with the <see cref="T:NPerf.Framework.PerfTesterAttribute"/>, 
as a test setup method. 
</para>
<para>
The method takes the test index and the tested type as parameter.
The method must return void.
</para>
<para>
Because of .Net JIT, a first run must be made on the test in order to avoid the
overhead of the compilation. In this case, the testIndex is set to -1.
</para>
</remarks>
            <example name="PerfSetUpTearDownAttribute">
The <see cref="T:NPerf.Framework.PerfSetUpAttribute"/> defines a method that initializes the tester and
tested object. The <see cref="T:NPerf.Framework.PerfTearDownAttribute"/> defines a method that cleans ressources after the test has 
been executed.
<code>using NPerf.Framework;

[PerfTester(typeof(IDictionary),3)]
public DictionaryTester
{
    [PerfSetUp]
    public void SetUp(int testIndex, IDictionary dic)
    {
       // setting up the test
       ...
    }
    
    [PerfTearDown]
    public void TearDown(IDictionary dic)
    {
    }
}</code>
</example>
        </member>
    </members>
</doc>
